services:
  react-app:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./front-end:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:${DHT11_PORT:-3009}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  dht11-app:
    env_file: .env
    build:
      context: ./dht11-app
    container_name: ${DHT11_APP_NAME:-dht11-app}
    ports:
      - "${DHT11_PORT:-3009}:${DHT11_PORT:-3009}"
    environment:
      - DB_HOST=${DB_HOST:-mariadb}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-mariadb}
      - TZ=${TIMEZONE:-America/Chicago}
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./dht11-app:/app
    networks:
      - app-network
    privileged: true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:${DHT11_PORT:-3009}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  weather-app:
    env_file: .env
    build:
      context: ./weather-app
    container_name: ${WEATHER_APP_NAME:-weather-app}
    ports:
      - "${WEATHER_PORT:-3001}:${WEATHER_PORT:-3001}"
    environment:
      - DB_HOST=${DB_HOST:-mariadb}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-mariadb}
      - TZ=${TIMEZONE:-America/Chicago}
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./weather-app:/app
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:${WEATHER_PORT:-3001}" ]
      interval: 30s
      timeout: 10s
      retries: 3
  
  web-api:
    env_file: .env
    build:
      context: ./web-api
    container_name: ${WEB_API_NAME:-web-api}
    ports:
      - "${WEB_API_PORT:-3002}:${WEB_API_PORT:-3002}"
    environment:
      - DB_HOST=${DB_HOST:-mariadb}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-mariadb}
      - TZ=${TIMEZONE:-America/Chicago}
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./web-api:/app
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:${WEB_API_PORT:-3002}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    image: mariadb:latest
    container_name: ${MARIADB_CONTAINER_NAME:-mariadb}
    ports:
      - "${MARIADB_PORT:-3306}:${MARIADB_PORT:-3306}"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-mariadb}
      - TZ=${TIMEZONE:-America/Chicago}
    volumes:
      - ./mariadb_data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

volumes:
  mariadb_data:

networks:
  app-network:
    driver: bridge
